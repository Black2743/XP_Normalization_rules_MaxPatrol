

# <13>Nov 27 11:16:37 {"name":"msk-dc-04","hostname":"msk-dc-04","id":"cee82a30-ffd9-42cf-b616-50c2be4da5b0","os":{"name":"Windows Server 2016 Standard","family":"windows","version":"10.0","build":"14393.4350","kernel":"10.0.14393.4350 (rs1_release.210407-2154)","platform":"windows"},"architecture":"x86_64"} 
# LOGSTASH[-]: 2024-11-27T11:16:37.019Z {name=msk-dc-04, hostname=msk-dc-04, id=cee82a30-ffd9-42cf-b616-50c2be4da5b0, os={name=Windows Server 2016 Standard, family=windows, version=10.0, build=14393.4350, kernel=10.0.14393.4350 (rs1_release.210407-2154), platform=windows}, architecture=x86_64} 

# Network Policy Server denied access to a user.
# \n\nContact the Network Policy Server administrator for more information.

# \n\nUser:\n	Security ID:			S-1-0-0\n	Account Name:			482ae39b41f3\n	Account Domain:			RENLIFE\n	Fully Qualified Account Name:	RENLIFE\482ae39b41f3

# \n\nClient Machine:\n	Security ID:			S-1-0-0\n	Account Name:			-\n	Fully Qualified Account Name:	-\n	Called Station Identifier:		B4-DE-31-5B-9A-8E\n	Calling Station Identifier:		48-2A-E3-9B-41-F3

# \n\nNAS:\n	NAS IPv4 Address:		10.10.254.62\n	NAS IPv6 Address:		-\n	NAS Identifier:			-\n	NAS Port-Type:			Ethernet\n	NAS Port:			50531

# \n\nRADIUS Client:\n	Client Friendly Name:		Cisco_C4506E-2-Rack-2\n	Client IP Address:			10.10.254.62

# \n\nAuthentication Details:\n	Connection Request Policy Name:	Secure Wired Connections\n	Network Policy Name:		-\n	Authentication Provider:		Windows\n	Authentication Server:		msk-dc-04.mos.renlife.com\n	Authentication Type:		PAP\n	EAP Type:			-\n	Account Session Identifier:		-\n	Logging Results:			Accounting information was written to the local log file.\n	Reason Code:			16\n	Reason:				Authentication failed due to a user credentials mismatch. Either the user name provided does not map to an existing user account or the password was incorrect.



TEXT = '<{NUMBER}> {DATETIME} {$1=UNTIL("LOGSTASH[-]:")} {$TimeGenerated=DATETIME} {$2=STRING*} Network Policy Server denied access to a user. \\n\\n
Contact the Network Policy Server administrator for more information.
{$uncut_info=STRING*}'
alert.context="Network Policy Server denied access to a user."

subject = "account"
action = "login"
object = "system"
status = "failure"

submessage("JSON","Info", $1)
subformula 'Info'
    JSON=''
    $ComputerName=$name
    if find_substr($ComputerName, '.') != null then
        event_src.fqdn = lower($ComputerName)
        event_src.hostname = lower(substr($ComputerName, 0, find_substr($ComputerName, '.')))
    else
        event_src.hostname = lower($ComputerName)
    endif
    event_src.id=$id
endsubformula

$Data=keyvalue(strip(replace(replace($uncut_info,'&@',"\\\\",10000),'|',"&@n",10000),'||',''),'||',':','')

$DataUser= keyvalue(strip($Data["User"],'| ',''),'|',':','')
$DataClientMachine= keyvalue(strip($Data["Client Machine"],'| ',''),'|',':','')
$DataNAS=keyvalue(strip($Data["NAS"],'| ',''),'|',':','')
$DataRADIUSClient=keyvalue(strip($Data["RADIUS Client"],'| ',''),'|',':','')
$DataAuthenticationDetails=keyvalue(strip($Data["Authentication Details"],'| ',''),'|',':','')


# данные пользователя, который авторизуется
subject.account.id = $DataUser["Security ID"]
subject.account.domain = lower($DataUser["Account Domain"])

if $DataUser["Account Name"] != "-" and $DataUser["Account Name"] != null then
    $username = lower($DataUser["Account Name"])
    if find_substr($username, '@') != null then
        subject.account.name = csv($username, '@', '')[0]
    elif find_substr($username, '\\') != null then
        subject.account.name = csv($username, '\\', '')[1]
    else 
        subject.account.name = $username
    endif
endif

if $DataAuthenticationDetails['Account Session Identifier'] != '-' then
    subject.account.session_id = $DataAuthenticationDetails['Account Session Identifier']
endif

# данные сервера, который дает права (он же в dst.*)
if $DataAuthenticationDetails["Connection Request Policy Name"] != "-" then
    object.type = $DataAuthenticationDetails["Connection Request Policy Name"]
endif

if $DataAuthenticationDetails["Network Policy Name"] != "-" then
    object.name = $DataAuthenticationDetails["Network Policy Name"]
endif


if $DataNAS["NAS Identifier"] != "-" then
    object.id = $DataNAS["NAS Identifier"]
endif

# данные машины пользователя
if $Data["SubjectMachineName"] != "-" then
    $hostname = lower($Data["SubjectMachineName"])
endif
if find_substr($hostname, '.') != null then
    src.fqdn = $hostname
    src.hostname = substr($hostname, 0, find_substr($hostname, '.'))
else
    src.hostname = $hostname
endif

if $DataClientMachine["Calling Station Identifier"] != "-" then
    if coalesce(maybe_ipv4($DataClientMachine["Calling Station Identifier"]), maybe_ipv6($DataClientMachine["Calling Station Identifier"])) != null then
        src.ip = $DataClientMachine["Calling Station ID"]
    elif maybe_macaddr(substr($DataClientMachine["Calling Station Identifier"], 0, 17)) != null then
        src.mac = substr($DataClientMachine["Calling Station Identifier"], 0, 17)
    else 
        datafield2 = $DataClientMachine["Calling Station Identifier"] 
    endif
endif

# данные сервера, который дает права
if $DataClientMachine["Called Station Identifier"] != "-" then
    if coalesce(maybe_ipv4($DataClientMachine["Called Station Identifier"]), maybe_ipv6($DataClientMachine["Called Station Identifier"])) != null then
        dst.ip = $DataClientMachine["Called Station Identifier"]
    elif maybe_macaddr(substr($DataClientMachine["Called Station Identifier"], 0, 17)) != null then
        dst.mac = substr($DataClientMachine["Called Station Identifier"], 0, 17)
    else 
        datafield3 = $DataClientMachine["Called Station Identifier"]  # Called station ID
    endif
endif

# данные сервера, который авторизует
nas_ip = coalesce(maybe_ipv4($DataNAS["NAS IPv4 Address"]), maybe_ipv6($Data["NAS IPv6 Address"]))

logon_auth_method = "remote"

datafield1 = $DataAuthenticationDetails["Authentication Type"]  # Authentication type

if $DataNAS["NAS Port"] != "-" then
    datafield4 = $DataNAS["NAS Port"]  # The Text field contains the name of the port using UTF-8 encoded 10646 [8] characters
endif

datafield5 = coalesce(maybe_ipv4($DataRADIUSClient["Client IP Address"]), maybe_ipv6($DataRADIUSClient["Client IP Address"]))  # RADIUS Client IP address
datafield6 = $DataAuthenticationDetails['Reason']  # человекочитаемое описание причины

reason = $DataAuthenticationDetails['Reason Code']

time = $TimeGenerated
msgid = 6273
importance = "medium"

category.generic = "Operating System"
category.high = "Access Management"
category.low = "Communication"

event_src.vendor = "microsoft"
event_src.title = "nps"
event_src.category = "AAA"


id="SL_Logstash_syslog_6273_NPS_denied_access_to_a_user"
